% Generated by roxygen2: do not edit by hand
% Please edit documentation in R/RcppExports.R, R/bpr.R
\name{bpr_likelihood}
\alias{bpr}
\alias{bpr_gradient}
\alias{bpr_lik_region}
\alias{bpr_lik_resp}
\alias{bpr_likelihood}
\alias{bpr_model}
\alias{sum_weighted_bpr_grad}
\alias{sum_weighted_bpr_lik}
\title{Compute the BPR functions}
\usage{
bpr_likelihood(w, H, data, lambda, is_NLL)

bpr_gradient(w, H, data, lambda, is_NLL)

bpr_lik_region(w, x, des_mat, lambda, is_NLL)

bpr_lik_resp(w, x, des_mat, pi_k, lambda, is_NLL)

sum_weighted_bpr_lik(w, x, des_mat, post_prob, lambda, is_NLL)

sum_weighted_bpr_grad(w, x, des_mat, post_prob, lambda, is_NLL)
}
\arguments{
\item{w}{A vector of parameters (i.e. coefficients of the basis functions)}

\item{H}{The \code{L x M} matrix design matrix, where L is the number of
observations and M the number of basis functions.}

\item{data}{Either an \code{L x 3} matrix containing in the 1st column are
the observations, in the 2nd column the total number of trials and in the
3rd the number of successes or an \code{L x 2} matrix containing the
Bernoulli observations in the 2nd column. Each row corresponds to each row
of the design matrix.}

\item{lambda}{The complexity penalty coefficient for penalized regression.}

\item{is_NLL}{Logical, indicating if the Negative Log Likelihood should be
returned.}

\item{x}{A list of elements of length N, where each element is an L x 3
matrix of observations, where 1st column contains the locations. The 2nd
and 3rd columns contain the total trials and number of successes at the
corresponding locations, repsectively. If we have Bernoulli data, then the
matrix is L x 2, where the 2nd column contiains the Bernoulli observations.}

\item{des_mat}{A list of length N, where each element contains the \code{L x
M} design matrices, where L is the number of observations and M the number
of basis functions.}

\item{pi_k}{Mixing proportions in log scale.}

\item{post_prob}{A vector of length N containing the posterior probabilities
for each element of list x, respectively.}
}
\value{
Either the BPR log likelihood or the gradient.
}
\description{
These functions evaluate the BPR model likelihood and gradient
  using both the Bernoulli and Binomial likelihoods. There are also functions
  to compute the sum of BPR likelihoods and weighted sum of BPR likelihoods.
  They are written in C++ for efficiency.
}
\section{Mathematical formula}{
 The Binomial distributed Probit Regression log
  likelihood function is computed by the following formula: \deqn{log p(y |
  f, w) = \sum_{l=1}^{L} log Binom(m_{l} | t_{l}, \Phi(w^{t}h(x_{l})))} where
  h(x_{l}) are the basis functions.
}
\author{
C.A.Kapourani \email{C.A.Kapourani@ed.ac.uk}
}
\seealso{
\code{\link{eval_functions}}, \code{\link{bpr_optimize}}
}

